version: 2.1

executors:
  default:
    docker:
      - image: cimg/rust:1.65.0

commands:
  setup-sccache:
    steps:
      - run:
          name: Install sccache
          command: |
            cargo install sccache
            # This configures Rust to use sccache.
            echo 'export "RUSTC_WRAPPER"="sccache"' >> $BASH_ENV
            # This is the maximum space sccache cache will use on disk.
            echo 'export "SCCACHE_CACHE_SIZE"="1G"' >> $BASH_ENV
            sccache --version
  save-sccache-cache:
    parameters:
      path:
        type: string
        default: "~/.cache/sccache"
    steps:
      - save_cache:
          name: Save sccache cache
          # We only upload a new cache if our Cargo.lock changed
          # otherwise, we use the exact same key which won't upload a new cache
          key: sccache-cache-stable-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "Cargo.lock" }}
          paths:
            - <<parameters.path>>
  restore-sccache-cache:
    steps:
      - restore_cache:
          name: Restore sccache cache
          keys: 
          # We have multiple keys to increase the chance of a cache hit
          # in case the Cargo.lock is updated, we still want to retrieve
          # some cache
            - sccache-cache-stable-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "Cargo.lock" }}
            - sccache-cache-stable-{{ arch }}-{{ .Environment.CIRCLE_JOB }}
            - sccache-cache-stable-{{ arch }}

jobs:
  rust-toolchain-install:
    executor: default
    steps:
      - checkout
        #- restore_cache:
        #  keys:
        #   - cargo-v0-{{ checksum "rust-toolchain.toml" }}-{{ checksum "Cargo.toml" }}-{{ arch }}
      - run: rustup install nightly
        #- save_cache:
        #  key: cargo-v0-{{ checksum "rust-toolchain.toml" }}-{{ checksum "Cargo.toml" }}-{{ arch }}
        #  paths:
        #    - "~/"

  mold-linker-install:
    executor: default
    steps:
      - checkout
      - restore_cache:
          keys:
            - mold-linker-{{ checksum "/usr/local/bin/mold" }}-{{ arch }}
      - run: git clone https://github.com/rui314/mold.git
      - run: mkdir ./mold/build
      - run: sudo ./mold/install-build-deps.sh
      - run: cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER=c++ ./mold -B ./mold/build
      - run: cmake --build ./mold/build -j $(nproc)
      - run: cmake --install ./mold/build
      - save_cache:
          key: mold-linker-{{ checksum "/usr/local/bin/mold" }}-{{ arch }}
          paths:
            - "~/"

  rust-build:
    executor: default
    steps:
      - checkout
      - setup-sccache
      - restore-sccache-cache
      - run: cargo build
      - run: cargo clippy --fix --allow-dirty --allow-staged
      - save-sccache-cache

  rust-test:
    executor: default
    steps:
      - checkout
      - run: mkdir test-results
      - run: cargo test
      - store_test_results:
          path: test-results


workflows:
  version: 2

  test:
    jobs:
      - rust-toolchain-install
      - mold-linker-install:
          requires:
            - rust-toolchain-install
      - rust-build:
          requires:
            - mold-linker-install
      - rust-test:
          requires:
            - rust-build
